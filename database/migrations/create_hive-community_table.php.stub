<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up()
    {
      $tableNames  = config('hive-community.table_names');
      $columnNames = config('hive-community.column_names');

      if (empty($tableNames)) {
        throw new \Exception('Error: config/hive-community.php not loaded. Run [php artisan config:clear] and try again.');
      }
      if (empty($columnNames)) {
        throw new \Exception('Error: config/hive-community.php not loaded. Run [php artisan config:clear] and try again.');
      }

      if(!Schema::hasTable($tableNames['groups'])) {
            Schema::create($tableNames['groups'], function (Blueprint $table) {
              $table->id();
              $table->slugField('code');
              $table->descriptionFieldJson('title');
              $table->descriptionFieldJson('description');
              $table->descriptionFieldJson('users');
              $table->string('type')->nullable();
              $table->boolean('personal_team');
              $table->isFeaturedField();
              $table->isDefaultField();
              $table->isPrivateField();
              $table->isActiveField();
              $table->sortOrderField();
              $table->globalUserField();
              $table->propertiesSchemaField();
              $table->dataSchemaField();
              $table->globalField();
              $table->morphToOwner();
              $table->softDeletes();
              $table->timestamps();
            });
          }

      if(!Schema::hasTable($tableNames['canals'])) {
            Schema::create($tableNames['canals'], function (Blueprint $table) {
              $table->id();
              $table->descriptionFieldJson('title');
              $table->descriptionFieldJson('description');
              $table->slugField('code'));
              $table->isFeaturedField();
              $table->isDefaultField();
              $table->isPrivateField();
              $table->isActiveField();
              $table->sortOrderField();
              $table->globalUserField();
              $table->propertiesSchemaField();
              $table->dataSchemaField();
              $table->globalField();
              $table->softDeletes();
              $table->timestamps();
            });
         }

     if(!Schema::hasTable($tableNames['channels'])) {
           Schema::create($tableNames['channels'], function (Blueprint $table) {
             $table->id();
             $table->descriptionFieldJson('title');
             $table->descriptionFieldJson('description');
             $table->foreignId('canal_id')->nullable();
             $table->string('type')->nullable();
             $table->isFeaturedField();
             $table->sortOrderField();
           });
        }

     if(!Schema::hasTable($tableNames['membership'])) {
           Schema::create($tableNames['group_user'], function (Blueprint $table) {
             $table->id();
             $table->foreignId('team_id');
             $table->foreignId('user_id');
             $table->string('role')->nullable();
             $table->isFeaturedField();
             $table->isDefaultField();
             $table->isPrivateField();
             $table->timestamps();
           });
         }

    }


    public function down()
    {
      $tableNames  = config('hive-community.table_names');
      $columnNames = config('hive-community.column_names');

      if (empty($tableNames)) {
        throw new \Exception('Error: config/hive-community.php not loaded. Run [php artisan config:clear] and try again.');
      }
      if (empty($columnNames)) {
        throw new \Exception('Error: config/hive-community.php not loaded. Run [php artisan config:clear] and try again.');
      }

      Schema::dropIfExists($tableNames['membership']);
      Schema::dropIfExists($tableNames['owner_role']);
      Schema::dropIfExists($tableNames['channels']);
      Schema::dropIfExists($tableNames['canals']);
      Schema::dropIfExists($tableNames['groups']);
    }
};
