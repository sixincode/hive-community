<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up()
    {
      $tableNames  = config('hive-community.table_names');
      $columnNames = config('hive-community.column_names');

      if (empty($tableNames)) {
        throw new \Exception('Error: config/hive-community.php not loaded. Run [php artisan config:clear] and try again.');
      }
      if (empty($columnNames)) {
        throw new \Exception('Error: config/hive-community.php not loaded. Run [php artisan config:clear] and try again.');
      }

      if(!Schema::hasTable('users')) {
        $table->dropColumn('name');
        $table->string('first_name')->after('id');
        $table->string('last_name')->after('first_name');
        $table->string('username')->after('last_name')->unique();
        $table->string('phone')->after('email')->unique()->nullable();
        $table->string('provider_id')->after('phone')->unique()->nullable();
        $table->string('provider_type')->after('provider_id')->unique()->nullable();
        $table->foreignId('current_tenant_id')->after('provider_type')->nullable();
        $table->integer('membership_ends_at')->nullable();
        $table->integer('type')->after('phone')->default(3000);
        $table->string('global')->unique();
      }

          if(!Schema::hasTable($tableNames['teams'])) {
            Schema::create($tableNames['teams'], function (Blueprint $table) {
              $table->id();
              $table->slugField('slug');
              $table->string('name');
              $table->descriptionFieldJson('description');
              $table->descriptionFieldJson('users');
              $table->integer('user_id');
              $table->string('type')->nullable();
              $table->boolean('personal_team')->default(true);
              $table->isFeaturedField();
              $table->isDefaultField();
              $table->isPrivateField();
              $table->isActiveField();
              $table->sortOrderField();
              $table->globalUserField();
              $table->propertiesSchemaField();
              $table->dataSchemaField();
              $table->globalField();
              $table->morphToOwner();
              $table->softDeletes();
              $table->timestamps();
            });
          }

      if(!Schema::hasTable($tableNames['canals'])) {
            Schema::create($tableNames['canals'], function (Blueprint $table) {
              $table->id();
              $table->descriptionFieldJson('title');
              $table->descriptionFieldJson('description');
              $table->slugField('slug');
              $table->isFeaturedField();
              $table->isDefaultField();
              $table->isPrivateField();
              $table->isActiveField();
              $table->sortOrderField();
              $table->globalUserField();
              $table->propertiesSchemaField();
              $table->dataSchemaField();
              $table->globalField();
              $table->softDeletes();
              $table->timestamps();
            });
         }

     if(!Schema::hasTable($tableNames['channels'])) {
           Schema::create($tableNames['channels'], function (Blueprint $table) {
             $table->id();
             $table->descriptionFieldJson('title');
             $table->descriptionFieldJson('description');
             $table->foreignId('canal_id')->nullable();
             $table->string('type')->nullable();
             $table->isFeaturedField();
             $table->sortOrderField();
           });
        }

     if(!Schema::hasTable($tableNames['team_user'])) {
           Schema::create($tableNames['team_user'], function (Blueprint $table) {
             $table->id();
             $table->foreignId('team_id');
             $table->foreignId('user_id');
             $table->string('role')->nullable();
             $table->isFeaturedField();
             $table->isDefaultField();
             $table->isPrivateField();
             $table->timestamps();
           });
         }

    }


    public function down()
    {
      $tableNames  = config('hive-community.table_names');
      $columnNames = config('hive-community.column_names');

      if (empty($tableNames)) {
        throw new \Exception('Error: config/hive-community.php not loaded. Run [php artisan config:clear] and try again.');
      }
      if (empty($columnNames)) {
        throw new \Exception('Error: config/hive-community.php not loaded. Run [php artisan config:clear] and try again.');
      }

      Schema::dropIfExists($tableNames['membership']);
      Schema::dropIfExists($tableNames['owner_role']);
      Schema::dropIfExists($tableNames['channels']);
      Schema::dropIfExists($tableNames['canals']);
      Schema::dropIfExists($tableNames['teams']);
      Schema::table('users', function (Blueprint $table) {
        $table->string('name');
        $table->dropColumn('first_name');
        $table->dropColumn('last_name');
        $table->dropColumn('username');
        $table->dropColumn('phone');
    });
    }
};
